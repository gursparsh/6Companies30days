class Solution{
    static int equalPartition(int N, int nums[])
    {
        // code here
        int sum = 0;
        for (int i=0; i<N; i++) {
            sum = sum + nums[i];
        }
        
        if (sum%2 != 0)
            return 0;
        
        int targetsum = sum / 2;
        return subsetsum (nums, N, targetsum);
    }
    
    static int subsetsum (int[]nums, int n, int targetsum)
    {
        int [][] matrix = new int[n+1][targetsum+1];
        
        for (int j=0; j<=targetsum; j++) {
            matrix[0][j] = 0;
        }
        
        for (int i=0; i<n+1; i++) {
            matrix[i][0] = 1;
        }
        
        for (int i=1; i<=n; i++) {
            for (int j=1; j<=targetsum; j++) {
                if (nums[i-1] <= j){
                    matrix[i][j] = (matrix[i-1][j - nums[i-1]] == 1 || matrix[i-1][j] == 1)?1:0;
                }
                else{
                    matrix[i][j] = matrix[i-1][j];
                }
            }
        }
        
        return matrix[n][targetsum];
    }
    
}
