class Solution
{
    ArrayList<Integer> list = new ArrayList<>();
    
    public void subset(int[] arr, int sum){
        int n = arr.length;
        boolean[][] dp = new boolean[n+1][sum+1];
        
        for(int i=0;i<n;i++){
            for(int j=0;j<sum;j++){
                if(i==0){
                    dp[i][j]=false;
                }
                if(j==0){
                    dp[i][j]=true;
                }
            }
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=sum;j++){
                if(arr[i-1]<=j){
                    dp[i][j]=dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }else{
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        
        for(int j=0,i=n;j<=sum/2;j++){
            if(dp[i][j]==true){
                list.add(j);
            }
        }
    }

	public int minDifference(int arr[], int n) 
	{ 
	    // Your code goes here
	    int range = 0;
	    for(int i=0;i<n;i++){
	        range += arr[i];
	    }
	   //  System.out.println(range+" ");
	    Arrays.sort(arr);
	    subset(arr, range);
	    
	    int mini = range;
	    
	    for(int i : list){
	       // System.out.print(i+" ");
	        mini = Math.min(mini, range-2*i);
	    }
	    
	    return mini;
	} 
}
